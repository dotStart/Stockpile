// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status struct {
	Brand                string   `protobuf:"bytes,1,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	VersionFull          string   `protobuf:"bytes,3,opt,name=VersionFull,proto3" json:"VersionFull,omitempty"`
	CommitHash           string   `protobuf:"bytes,4,opt,name=CommitHash,proto3" json:"CommitHash,omitempty"`
	BuildTimestamp       int64    `protobuf:"varint,5,opt,name=BuildTimestamp,proto3" json:"BuildTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_system_00592df632489c93, []int{0}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Status) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Status) GetVersionFull() string {
	if m != nil {
		return m.VersionFull
	}
	return ""
}

func (m *Status) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *Status) GetBuildTimestamp() int64 {
	if m != nil {
		return m.BuildTimestamp
	}
	return 0
}

type PluginList struct {
	Plugins              []*Plugin `protobuf:"bytes,1,rep,name=Plugins,proto3" json:"Plugins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PluginList) Reset()         { *m = PluginList{} }
func (m *PluginList) String() string { return proto.CompactTextString(m) }
func (*PluginList) ProtoMessage()    {}
func (*PluginList) Descriptor() ([]byte, []int) {
	return fileDescriptor_system_00592df632489c93, []int{1}
}
func (m *PluginList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginList.Unmarshal(m, b)
}
func (m *PluginList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginList.Marshal(b, m, deterministic)
}
func (dst *PluginList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginList.Merge(dst, src)
}
func (m *PluginList) XXX_Size() int {
	return xxx_messageInfo_PluginList.Size(m)
}
func (m *PluginList) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginList.DiscardUnknown(m)
}

var xxx_messageInfo_PluginList proto.InternalMessageInfo

func (m *PluginList) GetPlugins() []*Plugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

type Plugin struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Authors              []string `protobuf:"bytes,3,rep,name=Authors,proto3" json:"Authors,omitempty"`
	Website              string   `protobuf:"bytes,4,opt,name=Website,proto3" json:"Website,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plugin) Reset()         { *m = Plugin{} }
func (m *Plugin) String() string { return proto.CompactTextString(m) }
func (*Plugin) ProtoMessage()    {}
func (*Plugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_system_00592df632489c93, []int{2}
}
func (m *Plugin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plugin.Unmarshal(m, b)
}
func (m *Plugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plugin.Marshal(b, m, deterministic)
}
func (dst *Plugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plugin.Merge(dst, src)
}
func (m *Plugin) XXX_Size() int {
	return xxx_messageInfo_Plugin.Size(m)
}
func (m *Plugin) XXX_DiscardUnknown() {
	xxx_messageInfo_Plugin.DiscardUnknown(m)
}

var xxx_messageInfo_Plugin proto.InternalMessageInfo

func (m *Plugin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plugin) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Plugin) GetAuthors() []string {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Plugin) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "rpc.Status")
	proto.RegisterType((*PluginList)(nil), "rpc.PluginList")
	proto.RegisterType((*Plugin)(nil), "rpc.Plugin")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SystemServiceClient is the client API for SystemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemServiceClient interface {
	GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error)
	GetPlugins(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginList, error)
}

type systemServiceClient struct {
	cc *grpc.ClientConn
}

func NewSystemServiceClient(cc *grpc.ClientConn) SystemServiceClient {
	return &systemServiceClient{cc}
}

func (c *systemServiceClient) GetStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/rpc.SystemService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) GetPlugins(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginList, error) {
	out := new(PluginList)
	err := c.cc.Invoke(ctx, "/rpc.SystemService/GetPlugins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemServiceServer is the server API for SystemService service.
type SystemServiceServer interface {
	GetStatus(context.Context, *empty.Empty) (*Status, error)
	GetPlugins(context.Context, *empty.Empty) (*PluginList, error)
}

func RegisterSystemServiceServer(s *grpc.Server, srv SystemServiceServer) {
	s.RegisterService(&_SystemService_serviceDesc, srv)
}

func _SystemService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.SystemService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).GetStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_GetPlugins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).GetPlugins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.SystemService/GetPlugins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).GetPlugins(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.SystemService",
	HandlerType: (*SystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _SystemService_GetStatus_Handler,
		},
		{
			MethodName: "GetPlugins",
			Handler:    _SystemService_GetPlugins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}

func init() { proto.RegisterFile("system.proto", fileDescriptor_system_00592df632489c93) }

var fileDescriptor_system_00592df632489c93 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xdf, 0x4a, 0x2b, 0x31,
	0x10, 0xc6, 0xd9, 0xb3, 0xfd, 0x43, 0xa7, 0xe7, 0x0f, 0x84, 0xa3, 0x86, 0x0a, 0xb2, 0x14, 0x94,
	0x5e, 0xa5, 0xd2, 0xe2, 0x03, 0x58, 0xd1, 0x7a, 0x21, 0x22, 0xad, 0xe8, 0xf5, 0x76, 0x3b, 0xb6,
	0xd1, 0x4d, 0xb3, 0x24, 0xb3, 0xc5, 0xbe, 0x8e, 0x4f, 0x2a, 0x9b, 0x64, 0xa1, 0x08, 0x7a, 0x37,
	0xdf, 0xef, 0x9b, 0x81, 0xf9, 0x66, 0xe0, 0xb7, 0xdd, 0x59, 0x42, 0x25, 0x0a, 0xa3, 0x49, 0xb3,
	0xd8, 0x14, 0x59, 0xef, 0x78, 0xa5, 0xf5, 0x2a, 0xc7, 0xa1, 0x43, 0x8b, 0xf2, 0x65, 0x88, 0xaa,
	0xa0, 0x9d, 0xef, 0xe8, 0x7f, 0x44, 0xd0, 0x9a, 0x53, 0x4a, 0xa5, 0x65, 0xff, 0xa1, 0x39, 0x31,
	0xe9, 0x66, 0xc9, 0xa3, 0x24, 0x1a, 0x74, 0x66, 0x5e, 0x30, 0x0e, 0xed, 0x27, 0x34, 0x56, 0xea,
	0x0d, 0xff, 0xe5, 0x78, 0x2d, 0x59, 0x02, 0xdd, 0x50, 0xde, 0x94, 0x79, 0xce, 0x63, 0xe7, 0xee,
	0x23, 0x76, 0x02, 0x70, 0xa5, 0x95, 0x92, 0x74, 0x9b, 0xda, 0x35, 0x6f, 0xb8, 0x86, 0x3d, 0xc2,
	0xce, 0xe0, 0xef, 0xa4, 0x94, 0xf9, 0xf2, 0x51, 0x2a, 0xb4, 0x94, 0xaa, 0x82, 0x37, 0x93, 0x68,
	0x10, 0xcf, 0xbe, 0xd0, 0xfe, 0x18, 0xe0, 0x21, 0x2f, 0x57, 0x72, 0x73, 0x27, 0x2d, 0xb1, 0x53,
	0x68, 0x7b, 0x65, 0x79, 0x94, 0xc4, 0x83, 0xee, 0xa8, 0x2b, 0x4c, 0x91, 0x09, 0xcf, 0x66, 0xb5,
	0xd7, 0x7f, 0x85, 0x96, 0x2f, 0x19, 0x83, 0xc6, 0x7d, 0xaa, 0x30, 0xe4, 0x72, 0xf5, 0x0f, 0xb1,
	0x38, 0xb4, 0x2f, 0x4b, 0x5a, 0x6b, 0x63, 0x79, 0x9c, 0xc4, 0x95, 0x13, 0x64, 0xe5, 0x3c, 0xe3,
	0xc2, 0x4a, 0xc2, 0x90, 0xa5, 0x96, 0xa3, 0x77, 0xf8, 0x33, 0x77, 0x77, 0x9f, 0xa3, 0xd9, 0xca,
	0x0c, 0xd9, 0x39, 0x74, 0xa6, 0x48, 0xe1, 0xb0, 0x87, 0xc2, 0x7f, 0x40, 0xd4, 0x1f, 0x10, 0xd7,
	0xd5, 0x07, 0x7a, 0x7e, 0xef, 0xd0, 0x74, 0x01, 0x30, 0x45, 0x0a, 0xcb, 0x7f, 0x3b, 0xf2, 0x6f,
	0x2f, 0x6a, 0x75, 0x8c, 0xc9, 0x11, 0x1c, 0xd0, 0x56, 0x2c, 0x35, 0x59, 0x4a, 0x0d, 0x09, 0x4b,
	0x3a, 0x7b, 0x2b, 0x64, 0x8e, 0x8b, 0x96, 0x9b, 0x1c, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf2,
	0x21, 0xfb, 0x70, 0x11, 0x02, 0x00, 0x00,
}
